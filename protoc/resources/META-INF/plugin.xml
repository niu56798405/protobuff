<idea-plugin>
  <id>com.github.plugin.protoc</id>
  <name>protocol buff</name>
  <version>1.0</version>
  <vendor email="18568263560@163.com" url="https://github.com/niu56798405/protobuff">niuhaitao</vendor>

  <description><![CDATA[
                  protocol buff plugin <br>
                  cast proto file to java file<br>
                  source code:<br>
                  After installing the plug-in, click "Protoc" in the main navigation to set your protoc.exe directory<br>
                  and set out java files directory

                  <p><a href="https://github.com/niu56798405/protobuff" target="_blank">https://github.com/niu56798405/protobuff</a></p><br>
                  if you finish setting you can chose your proto files and use mouse clieck right button then chose “Protoc” <br>
                  finally you can see your proto file cast to java file success!!!
                  <p><img src="https://img2020.cnblogs.com/blog/2301902/202102/2301902-20210226110416768-1852821290.png" alt="" loading="lazy" /></p>


               ]]>
  </description>

  <change-notes><![CDATA[
     # protobuff
idea protobuff plugin

<p>idea&nbsp; 使用 protobuff 之前项目中 使用 maven 编译的方式 倒是很简单，</p>
<p>不过却有一个问题让我很难受。这个问题就是很慢 ，因为 我可能只改了一个 proto文件但是 maven转换为 java文件时 却要把所有的 proto文件都重新转换一次，</p>
<p>每次都必须等很长的时间，极大的影响了开发的效率。所以自己就写了 一个小插件 解决这个问题</p>
<p>&nbsp;</p>
<p>装好插件后 只需要 设置路径 就可以在proto 文件上 右键 点击 protoc 就可以转为 java 文件了</p>
<p>&nbsp;</p>
<p><img src="https://img2020.cnblogs.com/blog/2301902/202102/2301902-20210226110416768-1852821290.png" alt="" loading="lazy" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><img src="https://img2020.cnblogs.com/blog/2301902/202102/2301902-20210226110427473-76272627.png" alt="" loading="lazy" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>插件文件：</p>
<p><a href="//files.cnblogs.com/files/blogs/667780/protobuff_plugin.rar" target="_blank">下载插件</a></p>
<p>&nbsp;</p>

    ]]>
  </change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="145.0"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <!-- uncomment to enable plugin in all products
  <depends>com.intellij.modules.lang</depends>
  -->

  <extensions defaultExtensionNs="com.intellij">
    <!-- Add your extensions here -->
  </extensions>
  <depends>com.intellij.modules.lang</depends>

  <actions>
    <action id="ProtocAction" class="action.ProtocAction" text="Protoc" description="右键Action">
      <add-to-group group-id="ProjectViewPopupMenu" anchor="after" relative-to-action="ReplaceInPath"/>
    </action>

    <!--下面的group是分组，分组需要有一个唯一的id标识，text用来控制分组出现在IDEA时呈现的文案，description是描述，不会展现出来，简单描述下分组就行-->
    <group id="PluginTest" text="Protoc" description="设置protoc.exe路径和导出路径">
      <!--add-to-group控制把该分组加到IDEA里，group-id用来描述加在哪个位置，MainMenu表示加在IDEA上方的主菜单栏里，
      anchor表示顺序，last表示最后一个，所以下面的配置可以描述为：将该插件加到IDEA上方主菜单栏的最后一位-->
      <add-to-group group-id="MainMenu" anchor="last"/>
      <!--这个用来指定一个分组下的触发动作，同样的需要一个id，自定义；class就是用来处理这个动作的逻辑类，具体的插件逻辑都会写到对应的action类里，text用来控制文案，description为描述-->
      <action id="FromAction"
              class="action.FromAction"
              text="setting" description="表单测试描述"/>
    </group>
  </actions>

</idea-plugin>